import './utils.zpp' ( CompilationBag )

import '!/mem.zpp' ( init_rchunk = init_resizable_chunk )
import '!/io.zpp' ( read_file_to_buffer )
import '!/seq.zpp' ( List, init_list )

fn main(argc: u32, argv: **u8) -> i32:
  -- allocating 1mb for the starting allocation chunk
  compilation_bag: CompilationBag = (src: null, chunk: init_rchunk(1'000'000))
  -- reading the source code
  read_file_to_buffer(&mut compilation_bag.chunk, &mut compilation_bag.src, './simple.zpp')

  -- converting source code to ast, we start allocating space for 200 Nodes
  ast: List[Node] = init_list(200)
  parse_zpp_source(&mut compilation_bag, &mut ast)

  return 0